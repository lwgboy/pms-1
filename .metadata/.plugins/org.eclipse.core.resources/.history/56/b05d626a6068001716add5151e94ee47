package cn.yesway.pms.core.cast.resource.biz;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import cn.yesway.pms.common.enums.ApprovalStatus;
import cn.yesway.pms.common.page.PageBean;
import cn.yesway.pms.common.page.PageParam;
import cn.yesway.pms.core.cast.resource.dao.ResourceCastDao;
import cn.yesway.pms.core.cast.resource.entity.ResourceCast;

@Component("resourceCastBiz")
public class ResourceCastBiz {

	@Autowired
	private ResourceCastDao resourceCastDao;

	@Transactional(propagation = Propagation.REQUIRED)
	public Boolean create(ResourceCast resourceCast) {
		resourceCastDao.insert(resourceCast);
		resourceCastDao.createDetails(resourceCast);
		return true;
	}

	@Transactional(propagation = Propagation.REQUIRED)
	public Boolean update(ResourceCast resourceCast) {
		resourceCastDao.deleteDetailById(resourceCast.getId());
		resourceCastDao.createDetails(resourceCast);
		resourceCastDao.update(resourceCast);
		return true;
	}

	@Transactional(propagation = Propagation.REQUIRED)
	public Boolean updateStatus(ResourceCast resourceCast) {
		if (resourceCastDao.update(resourceCast) > 0) {
			if(resourceCast.getStatus() == ApprovalStatus.REPORT) {
				
			}
			return true;
		}
		return false;
	}

	public ResourceCast findById(Long id) {
		return resourceCastDao.findById(id);
	}

	public PageBean<ResourceCast> listByPageAndParam(PageParam page, Map<String, Object> map) {
		return resourceCastDao.listByPageAndParam(page, map);
	}

	public Boolean isExists(Map<String, Object> map) {
		if (resourceCastDao.countByParam(map) > 0) {
			return true;
		}
		return false;
	}

}
