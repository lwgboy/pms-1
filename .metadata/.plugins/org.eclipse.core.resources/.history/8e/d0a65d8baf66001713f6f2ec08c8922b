<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yesway.pms.core.cast.resource.dao.ResourceAmountDaoImpl">

	<sql id="pms_resource_amount"> pms_resource_amount </sql>
	<sql id="pms_resource_amount_detail"> pms_resource_amount_detail </sql>
	<sql id="pms_resource_amount_project_detail"> pms_resource_amount_project_detail </sql>

	<sql id="update_sql">
		<set>
			<if test="amount != null and amount != ''">amount = #{amount},</if>
			<if test="scale != null and scale != ''">scale = #{scale},</if>
			<if test="status != null">approval_status = #{status.value},</if>
			<if test="description != null and description != ''">description = #{description},</if>
		</set>
	</sql>

	<resultMap id="beanMap" type="ResourceAmount">
		<id column="id" property="id" />
		<result column="resource_id" property="resourceId" />
		<result column="resource_name" property="resourceName" />
		<result column="create_date" property="createDate" />
		<result column="approval_status" property="status"
			typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" javaType="cn.yesway.pms.common.enums.ApprovalStatus" />
		<result column="description" property="description" />
		<collection property="details" ofType="ResourceAmountDetail"
			column="id" select="findDetailById">
		</collection>
	</resultMap>

	<resultMap id="detailBeanMap" type="ResourceAmountDetail">
		<id column="id" property="id" />
		<result column="resource_amount_id" property="resourceAmountId" />
		<result column="project_id" property="projectId" />
		<result column="project_name" property="projectName" />
		<result column="amount" property="amount" />
		<result column="scale" property="scale" />
		<result column="description" property="description" />
	</resultMap>

	<insert id="insert" parameterType="ResourceAmount" keyProperty="id"
		useGeneratedKeys="true">
		insert into
		<include refid="pms_resource_amount" />
		(resource_id, create_date,
		approval_status, description)
		values
		(#{resourceId}, #{createDate},
		#{status.value}, #{description})
	</insert>

	<update id="updateByParam" parameterType="java.util.Map">
		update
		<include refid="pms_resource_amount" />
		<set>
			approval_status = #{status.value}
		</set>
		<where>
			resource_id = #{resourceId} and YEAR(create_date) =
			YEAR(#{createDate})
			and MONTH(create_date) = MONTH(#{createDate})
		</where>
	</update>

	<insert id="insertDetail" parameterType="ResourceAmount">
		insert into
		<include refid="pms_resource_amount_detail" />
		(resource_amount_id, project_id, amount, scale, description)
		values
		<foreach collection="details" item="detail" separator=","
			close=";">
			(#{id}, #{detail.projectId}, #{detail.amount},
			#{detail.scale},
			#{detail.description})
		</foreach>
	</insert>

	<delete id="deleteDetailById" parameterType="Long">
		delete from
		<include refid="pms_resource_amount_detail" />
		<where>
			resource_amount_id = #{id}
		</where>
	</delete>

	<update id="updateStatus" parameterType="ResourceAmount">
		update
		<include refid="pms_resource_amount" />
		set approval_status = #{status.value}
		<where>
			id = #{id}
		</where>
	</update>

	<select id="findById" parameterType="Long" resultMap="beanMap">
		SELECT
		ra.id,
		ra.resource_id,
		r.resource_name,
		ra.create_date,
		ra.approval_status,
		ra.description
		FROM
		<include refid="pms_resource_amount" />
		ra INNER JOIN
		pms_resource r ON
		ra.resource_id = r.id
		WHERE ra.id = #{id}
	</select>

	<select id="findDetailById" parameterType="Long" resultMap="detailBeanMap">
		SELECT
		rad.id,
		rad.resource_amount_id,
		rad.project_id,
		p.project_name,
		rad.amount,
		rad.scale,
		rad.description
		FROM
		<include refid="pms_resource_amount_detail" />
		rad
		INNER JOIN pms_project p
		ON rad.project_id = p.id
		<where>rad.resource_amount_id = #{id}</where>
	</select>

	<select id="listByPageAndParam" parameterType="java.util.Map"
		resultMap="beanMap">
		SELECT
		ra.id,
		ra.resource_id,
		r.resource_name,
		ra.create_date,
		ra.approval_status
		FROM
		<include refid="pms_resource_amount" />
		ra INNER JOIN
		pms_resource r ON
		ra.resource_id = r.id
		<where>
			<if
				test="fromDate != null and fromDate != '' and toDate != null and toDate != ''">
				ra.create_date between #{fromDate} and #{toDate}
			</if>
			<if test="resourceId != null and resourceId != ''">
				resource_id = #{resourceId}
			</if>
		</where>
		<![CDATA[
        order by ra.create_date desc
        ]]>
	</select>

	<select id="countByParam" parameterType="java.util.Map"
		resultType="Long">
		select count(0) from
		<include refid="pms_resource_amount" />
		<where>
			resource_id = #{resourceId} and
			MONTH(create_date) =
			#{month} and
			YEAR(create_date) = #{year}
		</where>
	</select>

	<select id="listByResourceIdAndCreateDate" parameterType="java.util.Map"
		resultMap="detailBeanMap">
		SELECT
		rad.id,
		rad.resource_amount_id,
		rad.project_id,
		p.project_name,
		rad.amount,
		rad.scale,
		rad.description
		FROM
		pms_resource_amount_detail rad
		INNER JOIN pms_project p
		ON
		rad.project_id = p.id
		WHERE rad.resource_amount_id IN
		(SELECT
		id
		FROM
		pms_resource_amount
		WHERE resource_id = #{resourceId}
		AND
		approval_status = #{status.value}
		AND
		YEAR(create_date) = #{year}
		AND
		MONTH(create_date) = #{month})
	</select>

	<update id="updateCast" parameterType="ResourceAmount">
		update
		<include refid="pms_resource_amount_detail" />
		<set>
			pre_tax_cast=#{preTaxCast}, after_tax_cast=#{afterTaxCast}
		</set>
		<where>
			id=#{id}
		</where>
	</update>
</mapper>